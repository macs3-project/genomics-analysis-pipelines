"""
Bulk ATAC-seq analysis pipeline.
"""

configfile: "config.yaml"

import yaml
import sys
import os

ALL_SAMPLES = config["samples"]
OUT_DIR = config["outprefix"] + "_Result"

PEAKS   = expand(OUT_DIR + "/Analysis/{sample}_peaks.narrowPeak", sample=ALL_SAMPLES)
BIGWIGS = expand(OUT_DIR + "/Analysis/{sample}_{ftype}.bw", sample=ALL_SAMPLES, ftype=["treat_pileup", "control_lambda"])
SEQSTAT = expand(OUT_DIR + "/QC/{sample}.stat.txt", sample=ALL_SAMPLES)
PEAKSTAT= expand(OUT_DIR + "/QC/{sample}.peakstat.txt", sample=ALL_SAMPLES)

TARGET = []
TARGET.extend(PEAKS + SEQSTAT + PEAKSTAT + BIGWIGS )

# decide certain parameters based on config.yaml
mapper = config["options"]["mapper"]
macs2_genome_option = " -g hs " if config["options"]["species"] == "GRCh38" else " -g mm "
macs2_cutoff_option = " -p " if config["options"]["peakcalling_cutoff_method"] == "pvalue" else " -q "
macs2_cutoff_option += str(config["options"]["peakcalling_cutoff"])
macs2_format_option = " -f BAMPE " if config["options"]["peakcalling_PE_mode"] == "Y" else " -f BAM "
macs2_lambda_option = " --nolambda " if config["options"]["peakcalling_disable_lambda"] == "Y" else " "
macs2_option = f"{macs2_genome_option} {macs2_cutoff_option} {macs2_lambda_option} {macs2_format_option}"
# one line to rule all

rule all:
    input: TARGET

# ---- all the following rules are common rules for analyzing a single dataset ---

include: "rules/chip_mapping.smk"
include: "rules/chip_macs2.smk"
#include: "rules/chip_peak_annotating.smk"
include: "rules/chip_qc.smk"


# ---- integrative analysis of all samples ---

#include: "rules/atac_dar.smk"
#include: "rules/atac_dar_annotating.smk"


---
title: "CD4T JIA RNA-seq (SGC data)" 
author: "Tao Liu"
date: "9/4/2019"
output: 
  html_document:
    theme: readable
    toc: true
    toc_float: true
    df_print: paged
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
# settings
library(tximport)
library(DESeq2)
library(ggplot2)
library(pcaExplorer)
library(BiocParallel)
library(RColorBrewer)
library(pheatmap)
library(scales)
register(MulticoreParam(4))

options(stringsAsFactors=F)
# meta information
meta<-read.table("meta_information_all",sep="\t",head=T,check.names=F)

# data
# flow cells to keep
# flowcells<-c("HCVKHDRXX","HLFLMDMXX")
flowcells<-c("SGC_HLFLMDMXX")
files<-list.files("SGC_HLFLMDMXX","_rsem.genes.results",recursive=T,full.names=T)

files<-files[grep(paste0(flowcells,collapse="|"),files)]
names(files)<-paste("SGC",gsub("_rsem.genes.results","",basename(files)),sep = ".")

# build meta information
colData<-data.frame(id=gsub("SGC.","",names(files)),flowcell="SGC")
colData<-merge(colData,meta,by.x=1,by.y=1)
rownames(colData)<-paste(colData$flowcell,colData$id,sep=".")

# 
files<-files[rownames(colData)]
raw<-tximport(files,type="rsem")
colData<-colData[match(colnames(raw$counts),rownames(colData)),]
# filter the effective_length==0
raw$length[raw$length==0]<-1
```

# Intro

Differential Gene Expression analysis on JIA CD4+ T cells from ADU, ADT, and HC groups. We have `r dim(raw$counts)[2]` samples in total downloaded from Columbia. In this analysis, we try to remove chrX and chrY genes.

# Data summary

```{r readsum, include=FALSE, echo=FALSE}
rna.sum <- read.table("summary_SGC.txt",header=T,row.names = "sample")
rna.sum$PCT_ALIGNED <- rna.sum$PF_ALIGNED_BASES/rna.sum$PF_BASES
rna.sum2<-rna.sum[,c(28,16:23)]
```

## RNA-seq quality

### Sequencing depth

```{r barplotQCdepth, dev="png",dpi=300,fig.height=5,fig.width=8,echo=F,message=F}
un <- rna.sum$PF_BASES-rna.sum$PF_ALIGNED_BASES
m <- rna.sum$PF_ALIGNED_BASES
n <- row.names(rna.sum)
d<-matrix()
d <- cbind("ALIGNED",m,n)
d2 <- cbind("UNALIGNED",un,n)
d <- rbind(d,d2)
d <- as.data.frame(d)
colnames(d) <- c("variable","value","sample")
d$value<-as.numeric(d$value)
ggplot(d,aes(x=sample,y=value,fill=variable))+geom_bar(stat="identity")+ theme(plot.title = element_text(size=11),axis.text.x = element_text(angle = 90, hjust = 1)) + xlab("") + ylab("Basepairs")+labs(fill="")
```

### RNA-seq Metrics by Picard

Overall, the metrics are much better than those from UB data with close to 3/4 of total reads being usable.

```{r boxplotQC, dev="png",dpi=300,fig.height=5,fig.width=8,echo=F,message=F}
d <- reshape2::melt(rna.sum2)
ggplot2::ggplot(d,aes(x=variable,y=value*100,fill=variable))+geom_boxplot(notch = T) + geom_jitter(color="black", size=0.4, alpha=0.9) + theme(legend.position="none", plot.title = element_text(size=11),axis.text.x = element_text(angle = 90, hjust = 1)) + xlab("") + ylab("Percentage (%)")
```

```{r deseq2run, include=FALSE, echo=FALSE}
# DESeq2
# filter no expression
dds<-DESeqDataSetFromTximport(raw,colData=colData,design=~0+group)
dds<-dds[rowSums(counts(dds))>0,]
gene.info<-read.table("gencode.v22.annotation.gene.info",sep="\t",col.names=c("id","name","class"))
mcols(dds)<-DataFrame(mcols(dds),gene.info[match(rownames(dds),gene.info$id),])
dds<-DESeq(dds,betaPrior=F,parallel=T)

# filter X Y
gene.xy <- read.table("gencode.v22.chrXY.gene.names.txt")
dds.auto<-dds[!(rownames(dds) %in% gene.xy$V1),]

#resultsNames(dds)
# [1] "groupADT" "groupADU" "groupHC"

#
# rld<-rlog(dds,blind=FALSE)
vsd<-varianceStabilizingTransformation(dds,blind=FALSE)
vsd.auto<-varianceStabilizingTransformation(dds.auto,blind=FALSE)
```

Analysis is based on DESeq2. We first loaded all count matrix from STAR-RSEM pipeline and meta-information into DESeq2. Normalization is through VST -- Variance Stabilizing Transformation.

## PCA 

A PCA analysis is performed on normalized data. We use PCA to explore the potential clustring in the samples. Although we still see sex-bias as shown in PC2, the effect is weaker than what we see in UB datasets.

```{r PCA, dev="png",dpi=300,fig.height=5,fig.width=8,echo=F,message=F}
plotPCA(vsd,intgroup=c("group"))
plotPCA(vsd,intgroup=c("sex"))
plotPCA(vsd,intgroup=c("age"))
```

After removing chrX and chrY genes, 
```{r PCA.noXY, dev="png",dpi=300,fig.height=5,fig.width=8,echo=F,message=F}
plotPCA(vsd.auto,intgroup=c("group"))
plotPCA(vsd.auto,intgroup=c("sex"))
plotPCA(vsd.auto,intgroup=c("age"))
```

## Correlation heatmap

Correlation analysis is performed on all counts data among all samples. Hierarchical clustering is based on correlation values among samples. Each sample is annotated with corresponding group, sex and age information. We don't see clear distinction.

```{r CorHeatmap, dev="png",dpi=300,fig.height=5,fig.width=8,echo=F,message=F}
sampleDists<-dist(t(assay(vsd)))
sampleDistMatrix<-as.matrix(sampleDists)
colnames(sampleDistMatrix)<-NULL
colors<-colorRampPalette(rev(brewer.pal(9,"Blues")))(255)
pheatmap(sampleDistMatrix,clustering_distance_rows=sampleDists,clustering_distance_cols=sampleDists,col=colors,annotation_row = colData[,c("group","sex","age")], fontsize_row = 6 )
```

After removing chrX and chrY genes, the clustering is still not clear.

```{r CorHeatmap.auto, dev="png",dpi=300,fig.height=5,fig.width=8,echo=F,message=F}
sampleDists<-dist(t(assay(vsd.auto)))
sampleDistMatrix<-as.matrix(sampleDists)
colnames(sampleDistMatrix)<-NULL
colors<-colorRampPalette(rev(brewer.pal(9,"Blues")))(255)
pheatmap(sampleDistMatrix,clustering_distance_rows=sampleDists,clustering_distance_cols=sampleDists,col=colors,annotation_row = colData[,c("group","sex","age")], fontsize_row = 6 )
```

# DEG analysis

After removing chrX and chrY genes, the Differentially Expressed Genes are called in DESeq2, with cutoff FDR 0.05.

```{r echo=FALSE, include=FALSE}
dds <- dds.auto
```

## ADT vs HC
```{r ADTHC, echo=FALSE}
de.adt2hc<-results(dds,contrast=c(1,0,-1))
de.adt2hc.df <- data.frame(mcols(dds)[order(de.adt2hc$padj),c("name","class")],HC=mcols(dds)[order(de.adt2hc$padj),"groupHC"],ADT=mcols(dds)[order(de.adt2hc$padj),"groupADT"],de.adt2hc[order(de.adt2hc$padj),c("log2FoldChange","pvalue","padj")])
de.adt2hc05 <- de.adt2hc[!is.na(de.adt2hc$padj) & de.adt2hc$padj<=0.05 & abs(de.adt2hc$log2FoldChange)>=1,]
de.adt2hc05.df <- de.adt2hc.df[!is.na(de.adt2hc.df$padj) & de.adt2hc.df$padj<=0.05 & abs(de.adt2hc.df$log2FoldChange)>=1, ]
de.adt2hc.up <-  !is.na(de.adt2hc$padj) & de.adt2hc$padj<=0.05 & de.adt2hc$log2FoldChange>=1
de.adt2hc.down <-  !is.na(de.adt2hc$padj) & de.adt2hc$padj<=0.05 & de.adt2hc$log2FoldChange<=-1
```

There are `r length(rownames(de.adt2hc05.df))` genes called between ADT and HC. Among them, `r sum(de.adt2hc.up)` are upregulated in ADT, compared with HC; `r sum(de.adt2hc.down)` are downregulated in ADT.

### MA-plot and volcano plot

MA-plot and volcano plot can be seen below.

```{r ADTHCMA, dev="png",dpi=300,fig.height=5,fig.width=8,echo=F,message=F }
par(mfcol=c(1,2))
plot(log10(de.adt2hc$baseMean),de.adt2hc$log2FoldChange,pch=20,cex=0.5,ylab="log2 foldchange(ADT/HC)",xlab="log10(mean)",col="#BBBBBB14")
legend("bottomleft",c("Up","Down"),col=c(muted("blue"),muted("red")),pch=c(20,20))
points(log10(de.adt2hc$baseMean[de.adt2hc.up]),de.adt2hc$log2FoldChange[de.adt2hc.up],col=muted("blue"),pch=20,cex=0.5,)
points(log10(de.adt2hc$baseMean[de.adt2hc.down]),de.adt2hc$log2FoldChange[de.adt2hc.down],col=muted("red"),pch=20,cex=0.5,)
abline(h=0)

plot(de.adt2hc$log2FoldChange,-log2(de.adt2hc$padj),pch=20,cex=0.5,xlab="log2 foldchange(ADT/HC)",ylab="-log2(FDR)",ylim=c(0,25),col="#BBBBBB14")
legend("bottomleft",c("Up","Down"),col=c(muted("blue"),muted("red")),pch=c(20,20))
points(de.adt2hc$log2FoldChange[de.adt2hc.up],-log2(de.adt2hc$padj[de.adt2hc.up]),col=muted("blue"),pch=20,cex=0.5)
points(de.adt2hc$log2FoldChange[de.adt2hc.down],-log2(de.adt2hc$padj[de.adt2hc.down]),col=muted("red"),pch=20,cex=0.5)
abline(v=0)
```

### Result (FDR =< 0.05 & |log2 foldchange| >= 1)

DEG result is shown below in detail. The counts in the 4th and 5th columns are in log2 scale.

```{r ADTHCDT, echo=F}
DT::datatable(de.adt2hc05.df,filter="top")
```

## ADU vs HC
```{r ADUHC, echo=FALSE}
de.adu2hc<-results(dds,contrast=c(0,1,-1))
de.adu2hc.df <- data.frame(mcols(dds)[order(de.adu2hc$padj),c("name","class")],HC=mcols(dds)[order(de.adu2hc$padj),"groupHC"],ADU=mcols(dds)[order(de.adu2hc$padj),"groupADU"],de.adu2hc[order(de.adu2hc$padj),c("log2FoldChange","pvalue","padj")])
de.adu2hc05 <- de.adu2hc[!is.na(de.adu2hc$padj) & de.adu2hc$padj<=0.05 & abs(de.adu2hc$log2FoldChange)>=1,]
de.adu2hc05.df <- de.adu2hc.df[!is.na(de.adu2hc.df$padj) & de.adu2hc.df$padj<=0.05 & abs(de.adu2hc.df$log2FoldChange)>=1, ]
de.adu2hc.up <-  !is.na(de.adu2hc$padj) & de.adu2hc$padj<=0.05 & de.adu2hc$log2FoldChange>=1
de.adu2hc.down <-  !is.na(de.adu2hc$padj) & de.adu2hc$padj<=0.05 & de.adu2hc$log2FoldChange<=-1
```

There are `r length(rownames(de.adu2hc05.df))` genes called between ADU and HC. Among them, `r sum(de.adu2hc.up)` are upregulated in ADU, compared with HC; `r sum(de.adu2hc.down)` are downregulated in ADU.

### MA-plot and volcano plot

MA-plot and volcano plot can be seen below.

```{r ADUHCMA, dev="png",dpi=300,fig.height=5,fig.width=8,echo=F,message=F }
par(mfcol=c(1,2))
plot(log10(de.adu2hc$baseMean),de.adu2hc$log2FoldChange,pch=20,cex=0.5,ylab="log2 foldchange(ADU/HC)",xlab="log10(mean)",col="#BBBBBB14")
legend("bottomleft",c("Up","Down"),col=c(muted("blue"),muted("red")),pch=c(20,20))
points(log10(de.adu2hc$baseMean[de.adu2hc.up]),de.adu2hc$log2FoldChange[de.adu2hc.up],col=muted("blue"),pch=20,cex=0.5,)
points(log10(de.adu2hc$baseMean[de.adu2hc.down]),de.adu2hc$log2FoldChange[de.adu2hc.down],col=muted("red"),pch=20,cex=0.5,)
abline(h=0)

plot(de.adu2hc$log2FoldChange,-log2(de.adu2hc$padj),pch=20,cex=0.5,xlab="log2 foldchange(ADU/HC)",ylab="-log2(FDR)",ylim=c(0,25),col="#BBBBBB14")
legend("bottomleft",c("Up","Down"),col=c(muted("blue"),muted("red")),pch=c(20,20))
points(de.adu2hc$log2FoldChange[de.adu2hc.up],-log2(de.adu2hc$padj[de.adu2hc.up]),col=muted("blue"),pch=20,cex=0.5)
points(de.adu2hc$log2FoldChange[de.adu2hc.down],-log2(de.adu2hc$padj[de.adu2hc.down]),col=muted("red"),pch=20,cex=0.5)
abline(v=0)
```

### Result (FDR < 0.05)

DEG result is shown below in detail. The counts in the 4th and 5th columns are in log2 scale.

```{r ADUHCDT, echo=F}
DT::datatable(de.adu2hc05.df,filter="top")
```

## ADT vs ADU
```{r ADTADU, echo=FALSE}
de.adt2adu<-results(dds,contrast=c(1,-1,0))
de.adt2adu.df <- data.frame(mcols(dds)[order(de.adt2adu$padj),c("name","class")],ADU=mcols(dds)[order(de.adt2adu$padj),"groupADU"],ADT=mcols(dds)[order(de.adt2adu$padj),"groupADT"],de.adt2adu[order(de.adt2adu$padj),c("log2FoldChange","pvalue","padj")])
de.adt2adu05 <- de.adt2adu[!is.na(de.adt2adu$padj) & de.adt2adu$padj<=0.05 & abs(de.adt2adu$log2FoldChange)>=1,]
de.adt2adu05.df <- de.adt2adu.df[!is.na(de.adt2adu.df$padj) & de.adt2adu.df$padj<=0.05 & abs(de.adt2adu.df$log2FoldChange)>=1, ]
de.adt2adu.up <-  !is.na(de.adt2adu$padj) & de.adt2adu$padj<=0.05 & de.adt2adu$log2FoldChange>=1
de.adt2adu.down <-  !is.na(de.adt2adu$padj) & de.adt2adu$padj<=0.05 & de.adt2adu$log2FoldChange<=-1
```

There are `r length(rownames(de.adt2adu05.df))` genes called between ADT and ADU. Among them, `r sum(de.adt2adu.up)` are upregulated in ADT, compared with ADU; `r sum(de.adt2adu.down)` are downregulated in ADT.

### MA-plot and volcano plot

MA-plot and volcano plot can be seen below.

```{r ADTADUMA, dev="png",dpi=300,fig.height=5,fig.width=8,echo=F,message=F }
par(mfcol=c(1,2))
plot(log10(de.adt2adu$baseMean),de.adt2adu$log2FoldChange,pch=20,cex=0.5,ylab="log2 foldchange(ADT/ADU)",xlab="log10(mean)",col="#BBBBBB14")
legend("bottomleft",c("Up","Down"),col=c(muted("blue"),muted("red")),pch=c(20,20))
points(log10(de.adt2adu$baseMean[de.adt2adu.up]),de.adt2adu$log2FoldChange[de.adt2adu.up],col=muted("blue"),pch=20,cex=0.5,)
points(log10(de.adt2adu$baseMean[de.adt2adu.down]),de.adt2adu$log2FoldChange[de.adt2adu.down],col=muted("red"),pch=20,cex=0.5,)
abline(h=0)

plot(de.adt2adu$log2FoldChange,-log2(de.adt2adu$padj),pch=20,cex=0.5,xlab="log2 foldchange(ADT/ADU)",ylab="-log2(FDR)",ylim=c(0,25),col="#BBBBBB14")
legend("bottomleft",c("Up","Down"),col=c(muted("blue"),muted("red")),pch=c(20,20))
points(de.adt2adu$log2FoldChange[de.adt2adu.up],-log2(de.adt2adu$padj[de.adt2adu.up]),col=muted("blue"),pch=20,cex=0.5)
points(de.adt2adu$log2FoldChange[de.adt2adu.down],-log2(de.adt2adu$padj[de.adt2adu.down]),col=muted("red"),pch=20,cex=0.5)
abline(v=0)
```

### Result (FDR < 0.05)

DEG result is shown below in detail. The counts in the 4th and 5th columns are in log2 scale.

```{r ADTADUDT, echo=F}
DT::datatable(de.adt2adu05.df,filter="top")
```

## Combined
```{r combined, echo=F}
all.de.genes <- union(union(rownames(de.adt2hc05.df),rownames(de.adu2hc05.df)), rownames(de.adt2adu05.df))
```

Finally, we combine genes from all three comparisons. Altogether we have `r length(all.de.genes)` genes. The following heatmap shows the normalized counts of `r length(all.de.genes)` genes across all samples.

```{r combined.heatmap, dev="png",dpi=300,fig.height=5,fig.width=8,echo=F,message=F}
pheatmap(assay(vsd[all.de.genes,]),show_rownames = F,annotation_col=colData[,c("group","sex","age")], fontsize_col = 6)
```